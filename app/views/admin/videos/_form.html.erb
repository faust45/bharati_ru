<%= include_js('application', 'jquery.autocomplete', 'jquery.ui.autocomplete.ext', 'jquery.templating', 'jquery.dimensions', 'prettify/prettify') %>
<% content_for(:js) do %>
  <%= include_tiny_mce_js %>
<% end %>
<%= tiny_mce_init %>

<%= simple_form_for [:admin, form_adapter], :url => url, :html => {:multipart => true, :method => form_method} do |f| %>
   <%= f.input :is_published, :as => :boolean, :label_wrap => false %>
   <%= f.input :title %>
   <%= f.input :content_type, :collection => ContentFormAdapter::Types, :value_method => :first, :label_method => :last %>
   <%= f.input :author, :as => :autocomplete %>
   <%= f.input :record_place, :as => :autocomplete %>
   <%= f.input :record_date, :as => :date, :include_blank => true, :start_year => 1900 %>

   <%#= bind_to_co_authors %>
   <%#= f.input :co_authors, :html => {:name => ''} %>

   <%= f.input :tags, :label => "Tags #{mark_by_tags}", :input_html => {:value => '', :name => 'tag_autocomplete'} %>
   <%= image_tag 'add-icon.png', :id => 'add_button' %>

   </br>
   <%= f.input :source, :as => :file, :label => "Source #{attached_file}"  %>

   <%= f.input :description, :as => :text, :input_html => { :class => 'mceEditor', :cols => 70} %>
   <%= f.submit 'save' %>
<% end %>

<%= render :partial => 'admin/authors/autocomplete',
  :locals => {
    :input => 'video_author'
  } %>

<%= render :partial => 'admin/shared/true_simple_autocomplete',
  :locals => {
    :input => 'video_record_place'
  } %>

<%= render :partial => 'admin/shared/simple_autocomplete', 
  :locals => {
    :input        => 'video_tags', 
    :selected     => 'all_tags', 
    :url          => autocomplete_admin_tags_path,
    :association  => 'tags'
  } %>

<script>
  $('#add_button').click(function() {
    var value = $('#video_tags').val();
    var checkbox_name = 'video[tags][]';
    var label_prefix = 'tag' 
    var mark = new Mark(value, checkbox_name, label_prefix);

    if (!mark.is_exists()) { 
      $('#all_tags').append(mark.create());
    } else {
      mark.highlight();
    }
  });

//jQuery(function ($) {
//  $('#video_co_authors').keyup(function() {
//    sendValue($(this).val());
//  }); 

//  function sendValue(str){
//    $.post("ajax.php",
//      { sendValue: str },
//      function(data){
//        $('#video_co_authors').html(data.returnValue);
//      }, 
//      "json"
//    );
//  }
//});
</script>
